<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["CIVIS_GMAP_KEY"]%>"
    async defer></script>
<script src="//cdn.rawgit.com/mahnunchik/markerclustererplus/master/dist/markerclusterer.min.js"></script>
<h1>October CTA Info</h1>


<h3>Aggregates:</h3>
<table>
  <tr>
    <th>Total Stops</th>
    <th>Total Routes</th>
    <th>Total Boardings</th>
    <th>Total Alightings</th>
    <th>Most flighty place (most boardings)</th>
    <th>Most happenin' place (most alightings)</th>
    <th>Stop with Most Routes</th>
    <th>Longest Route (by stops)</th>
  </tr>

  <tr>
  <td><%= @stops.count%></td>
  <td><%= @routes.count%></td>
  <td><%= @stops.sum('boardings')%></td>
  <td><%= @stops.sum('alightings')%></td>
  <td><%= @busiest_boarding%></td>
  <td><%= @busiest_alighting%></td>
  </tr>
</table>

<br>

<h2>Bus Stops</h2>
<table class="striped centered">
  <tr>
    <th>On Street</th>
    <th>Cross Street</th>
    <th>Boardings</th>
    <th>Alightings</th>
    <th>Location</th>
    <th>Number of Bus Routes</th>
  </tr>

<% @stops.each do |stop| %>
  <tr>
    <td><%= stop.on_street %></td>
    <td><%= stop.cross_street %></td>
    <td><%= stop.boardings %></td>
    <td><%= stop.alightings %></td>
    <td><%= stop.location %></td>
    <td><%= stop.bus_routes.count %></td>
  </tr>
<% end %>
</table>

<br>

<h2>Bus Routes</h2>
<table>
  <tr>
    <th>Route Number</th>
    <th>Number of Stops</th>
  </tr>

<% @routes.each do |route| %>
  <tr>
    <td><%= route.route_name %></td>
    <td><%= route.stops.count %></td>
  </tr>
<% end %>
</table>

<div style='width: 800px;'>
  <div id="map" style='width: 800px; height: 400px;'></div>
</div>
<script>
handler = Gmaps.build('Google');
handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
  markers = handler.addMarkers([
    {
      "lat": 0,
      "lng": 0,
      "picture": {
        "url": "http://people.mozilla.com/~faaborg/files/shiretoko/firefoxIcon/firefox-32.png",
        "width":  32,
        "height": 32
      },
      "infowindow": "hello!"
    }
  ]);
  handler.bounds.extendWith(markers);
  handler.fitMapToBounds();
});
</script>